{"version":3,"sources":["utils/theme.ts","state/context.ts","state/actions.ts","state/state.ts","state/modeOfUse.ts","state/reducer.ts","state/AppContextWithStateProvider.tsx","components/header/headerStyles.ts","components/header/Header.tsx","components/navigation/navigationStyles.ts","components/navigation/Navigation.tsx","components/navigation/navigationTargets.tsx","components/headerWithNavigation/headerWithNavigationStyles.ts","components/headerWithNavigation/HeaderWithNavigation.tsx","components/LotsOfDots.tsx","components/App.tsx","index.tsx"],"names":["theme","createMuiTheme","palette","primary","main","light","dark","contrastText","secondary","error","success","warning","AppContext","createContext","state","initialState","dispatch","actionTypes","modeOfUse","undefined","votingNumber","votingData","reducer","action","type","SET_MODE_OF_USE","data","CREATE","SET_VOTING_NUMBER","SET_VOTING_DATA","AppContextWithStateProvider","children","useReducer","Provider","value","useHeaderStyles","makeStyles","createStyles","container","display","flexDirection","justifyContent","alignItems","paddingLeft","paddingBottom","titleText","color","paddingTop","descriptionText","fontSize","marginBottom","Header","classes","className","Typography","variant","useNavigationStyles","navigationContentsTitle","navigationContentsItem","background","backgroundColor","divider","navigationMenu","borderRadius","icon","useNavigationMenuStyles","paper","width","Navigation","useState","drawerIsOpen","setDrawerIsOpen","navigationDrawerStyles","navigationTargets","label","to","style","handleDrawerStateChanged","newState","event","key","IconButton","onClick","Drawer","open","onClose","role","onKeyDown","List","Fragment","ListItem","Divider","map","target","component","Link","ListItemIcon","ListItemText","useHeaderWithNavigationStyles","outerContainer","marginTop","outerContainerNoMode","innerContainer","HeaderWithNavigation","useContext","Home","lazy","CreateVoting","Vote","ViewVoting","LotsOfDots","myMatch","BrowserRouter","parameters","params","possibleToken","thetoken","fallback","path","App","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca9ce467.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\n\n// https://material.io/resources/color/#!/?view.left=0&view.right=0&primary.color=FF9100&secondary.color=F5F5F5\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#616161',\n            light: '#8e8e8e',\n            dark: '#373737',\n            contrastText: '#fafafa'\n        },\n        secondary: {\n            main: '#bdbdbd',\n            light: '#efefef',\n            dark: '#8d8d8d',\n            contrastText: '#212121'\n        },\n        error: {\n            main: '#a30000'\n        }, \n        success: {\n            main: '#4faf11'\n        }, \n        warning: {\n            main: '#ff9100'\n        }, \n    }\n})\n\nexport default theme\n","import React from 'react'\nimport { createContext } from 'react'\nimport { initialState } from './state'\nimport { State } from './state'\nimport { Action } from './actions'\n\n\ntype ContextType = {\n    state: State,\n    dispatch: React.Dispatch<Action>\n}\n\n\nconst AppContext = createContext<ContextType>({\n    state: initialState,\n    dispatch: () => null\n})\n\n\nexport default AppContext\n\n","import { modeOfUse } from './modeOfUse'\nimport { Voting } from '../types/Voting'\n\n\nexport enum actionTypes {\n    'SET_MODE_OF_USE' = 'mode',\n    'SET_VOTING_NUMBER' = 'number',\n    'SET_VOTING_DATA' = 'data'\n}\n\n\nexport type Action = \n| {\n    type: actionTypes.SET_MODE_OF_USE,\n    data: modeOfUse | undefined\n}\n| {\n    type: actionTypes.SET_VOTING_NUMBER,\n    data: string | undefined\n}\n| {\n    type: actionTypes.SET_VOTING_DATA,\n    data: Voting | undefined\n}\n\n","import { Voting } from '../types/Voting'\nimport { modeOfUse } from './modeOfUse'\n\n\nexport type State = {\n    modeOfUse: modeOfUse | undefined,\n    votingNumber: string | undefined,\n    votingData: Voting | undefined\n}\n\nexport const initialState: State = {\n    modeOfUse: undefined,\n    votingNumber: undefined,\n    votingData: undefined\n}","export enum modeOfUse {\n    'CREATE' = 'Create new voting',\n    'VOTE' = 'Vote in existing voting',\n    'VIEW' = 'View voting results'\n}","import { Action, actionTypes } from './actions'\nimport { State } from './state'\nimport { modeOfUse } from './modeOfUse'\n\n\nexport const reducer = (state: State, action: Action): State => {\n\n    switch (action.type) {\n    case actionTypes.SET_MODE_OF_USE:\n        return { \n            modeOfUse: action.data, \n            votingNumber: action.data === modeOfUse.CREATE ? undefined : state.votingNumber,\n            votingData:  action.data === modeOfUse.CREATE ? undefined : state.votingData\n        }\n    case actionTypes.SET_VOTING_NUMBER:\n        return {\n            ...state,\n            votingNumber: action.data,\n            votingData: undefined\n        }\n    case actionTypes.SET_VOTING_DATA:\n        return {\n            ...state,\n            votingData: action.data\n        }\n    default:\n        return state\n    }\n}","import React, { useReducer } from 'react'\nimport { reducer } from './reducer'\nimport { initialState } from './state'\nimport AppContext from './context'\n\n\nconst AppContextWithStateProvider: React.FC = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n    return (\n        <AppContext.Provider value={{ state, dispatch }}>\n            {children}\n        </AppContext.Provider>\n    )\n}\n\nexport default AppContextWithStateProvider\n\n\n\n","import { makeStyles, createStyles } from '@material-ui/core/styles'\nimport { Theme } from '@material-ui/core'\n\n\nexport const useHeaderStyles = makeStyles((theme: Theme) => \n    createStyles({\n        container: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            paddingLeft: 20,\n            paddingBottom: 5,\n        },\n        titleText: {\n            color: theme.palette.primary.main,\n            paddingTop: 5,\n        },\n        descriptionText: {\n            color: theme.palette.primary.main,\n            fontSize: 13,\n            marginBottom: -3,\n        }\n    })\n)\n","import React from 'react'\nimport { useHeaderStyles } from './headerStyles'\nimport Typography from '@material-ui/core/Typography'\n\n\nconst Header: React.FC = () => {\n\n    const classes = useHeaderStyles()\n\n    return(\n        <div className={classes.container}>\n            <Typography variant='h5' className={classes.titleText}>\n                LOTS OF DOTS\n            </Typography>\n            <Typography className={classes.descriptionText}>\n                For quick and simple dot voting.\n            </Typography>\n            {/* <Typography className={classes.descriptionText}>\n                No need for email or phone number data.\n            </Typography> */}\n        </div>\n      \n    )\n}\n\nexport default Header","import { makeStyles, createStyles } from '@material-ui/core/styles'\nimport { Theme } from '@material-ui/core'\n\n\nexport const useNavigationStyles = makeStyles((theme: Theme) => \n    createStyles({\n        navigationContentsTitle: {\n            color: theme.palette.primary.contrastText,\n        },\n        navigationContentsItem: {\n            color: theme.palette.primary.contrastText,\n        },\n        background: {\n            backgroundColor: theme.palette.primary.main,\n        },\n        divider: {\n            backgroundColor: theme.palette.primary.contrastText,\n        },\n        navigationMenu: {\n            backgroundColor: theme.palette.secondary.main,\n            borderRadius: 8\n        },\n        icon: {\n            fontSize: 30,\n            color: theme.palette.primary.main,\n        },\n    })\n)\n","import React, { useState } from 'react'\nimport Drawer from '@material-ui/core/Drawer'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider'\nimport { Link } from 'react-router-dom'\nimport theme from '../../utils/theme'\nimport { getNavigationTargets } from './navigationTargets'\nimport Typography from '@material-ui/core/Typography'\nimport { useNavigationStyles } from './navigationStyles'\n\n\n// https://dev.to/rossanodan/building-a-navigation-drawer-with-material-ui-and-react-router-dom-1j6l\n\n\nconst useNavigationMenuStyles = makeStyles({\n    paper: { background: theme.palette.primary.main, width: '100%' }\n})\n\n\n\nconst Navigation: React.FC = () => {\n\n    const [drawerIsOpen, setDrawerIsOpen] = useState<boolean>(false)\n    const navigationDrawerStyles = useNavigationMenuStyles()\n    const navigationTargets = getNavigationTargets()\n    const classes = useNavigationStyles()\n\n    const handleDrawerStateChanged = (newState: boolean) => (event: React.KeyboardEvent | React.MouseEvent)  => {\n        if (event.type === 'keydown' && ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')) {\n            return\n        }\n        setDrawerIsOpen(newState)\n    }\n\n\n    return(\n        <div className={classes.navigationMenu}>\n            <IconButton onClick={handleDrawerStateChanged(true)}>\n                <MenuIcon className={classes.icon}/>\n            </IconButton>\n            <Drawer\n                open={drawerIsOpen}\n                onClose={handleDrawerStateChanged(false)}\n                classes={{ paper: navigationDrawerStyles.paper }}\n            >\n                <div role='presentation' onClick={handleDrawerStateChanged(false)} onKeyDown={handleDrawerStateChanged(false)} >\n                    <List>\n                        <React.Fragment key='listHeader'>\n                            <ListItem className={classes.background}>\n                                <Typography variant='h5' className={classes.navigationContentsTitle}>\n                                LOTS OF DOTS\n                                </Typography>\n                            </ListItem>\n                            <Divider  className={classes.divider}/>\n                        </React.Fragment>\n                        {navigationTargets.map(target => {\n                            return (\n                                <React.Fragment key={target.label}>\n                                    <ListItem component={Link} to={target.to} className={classes.background}>\n                                        <ListItemIcon>\n                                            {target.icon}\n                                        </ListItemIcon>\n                                        <ListItemText primary={target.label} className={classes.navigationContentsItem}/>\n                                    </ListItem>\n                                    <Divider  className={classes.divider}/>\n                                </React.Fragment>\n                            )\n                        })}\n                    </List>\n                </div>\n            </Drawer>\n        </div>\n    )\n}\n\nexport default Navigation","import React from 'react'\nimport HomeIcon from '@material-ui/icons/Home'\nimport CreateIcon from '@material-ui/icons/Create'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\nimport AssessmentIcon from '@material-ui/icons/Assessment'\nimport theme from '../../utils/theme'\n\n\ntype NavigationTarget = {\n    label: string,\n    to: string,\n    icon: React.ReactNode\n}\n\n\nexport const getNavigationTargets = (): NavigationTarget[] => {\n\n    return [\n        { label: 'HOME', to: '/home', icon: <HomeIcon fontSize='large' style={{ color: theme.palette.primary.contrastText }} /> },\n        { label: 'CREATE NEW VOTING EVENT', to: '/create', icon: <CreateIcon  fontSize='large' style={{ color: theme.palette.primary.contrastText }}/> },\n        { label: 'VOTE IN EXISTING VOTING', to: '/vote', icon: <PersonAddIcon fontSize='large' style={{ color: theme.palette.primary.contrastText }}/> },\n        { label: 'VIEW CURRENT RESULTS', to: '/view', icon: <AssessmentIcon fontSize='large' style={{ color: theme.palette.primary.contrastText }}/> },\n    ]\n}\n\n\n","import { makeStyles, createStyles } from '@material-ui/core/styles'\nimport { Theme } from '@material-ui/core'\n\n\n\nexport const useHeaderWithNavigationStyles = makeStyles((theme: Theme) => \n    createStyles({\n        outerContainer: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'flex-start',\n            marginTop: 10,\n            backgroundColor: theme.palette.secondary.light\n        },\n        outerContainerNoMode: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginTop: 10,\n            backgroundColor: theme.palette.secondary.light\n        },\n        innerContainer: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n            paddingLeft: 10,\n        },\n        divider: {\n            backgroundColor: theme.palette.primary.main,\n            width: '100%'\n        },\n    })\n)\n","import React, { useContext } from 'react'\nimport AppContext from '../../state/context'\nimport Header from '../header/Header'\nimport Navigation from '../navigation/Navigation'\nimport { useHeaderWithNavigationStyles } from './headerWithNavigationStyles'\nimport Divider from '@material-ui/core/Divider'\n\n\nconst HeaderWithNavigation: React.FC = () => {\n\n    const classes = useHeaderWithNavigationStyles()\n    const { state } = useContext(AppContext)\n\n    return(\n        <div className={state.modeOfUse !== undefined ? classes.outerContainer : classes.outerContainerNoMode}>\n            <Divider className={classes.divider}/>\n            <div className={classes.innerContainer}>\n                {state.modeOfUse !== undefined && <Navigation/>}\n                <Header/>\n            </div>\n            <Divider className={classes.divider}/>\n        </div>\n    )\n}\n\nexport default HeaderWithNavigation","import React, { Suspense, lazy } from 'react'\nimport * as BrowserRouter from 'react-router-dom'\n\nconst Home = lazy(() => import('./home/Home'))\nconst CreateVoting = lazy(() => import('./create/CreateVoting'))\nconst Vote = lazy(() => import('./vote/Vote'))\nconst ViewVoting = lazy(() => import('./view/ViewVoting'))\n\ntype Token = {\n    thetoken: string\n}\n\nconst LotsOfDots: React.FC = () => {\n\n    const myMatch = BrowserRouter.useRouteMatch('/token/:thetoken')\n    const parameters = myMatch?.params as Token\n    const possibleToken =  parameters !== undefined ? parameters.thetoken : 'No token' \n\n    return(\n        <Suspense fallback={<div>LOADING DATA...</div>}>\n            <BrowserRouter.Switch>\n                <BrowserRouter.Route path='/home'>\n                    <Home/>\n                </BrowserRouter.Route>\n                <BrowserRouter.Route path='/vote'>\n                    <Vote/>\n                </BrowserRouter.Route>\n                <BrowserRouter.Route path='/create'>\n                    <CreateVoting/>\n                </BrowserRouter.Route>\n                <BrowserRouter.Route path='/view'>\n                    <ViewVoting/>\n                </BrowserRouter.Route>\n                <BrowserRouter.Route path='/token'>\n                    <div>{possibleToken}</div>\n                </BrowserRouter.Route>\n                <BrowserRouter.Route path='/'>\n                    <Home/>\n                </BrowserRouter.Route>\n            </BrowserRouter.Switch>\n        </Suspense>  \n    )\n}\n\nexport default LotsOfDots\n\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport theme from '../utils/theme'\nimport AppContextWithStateProvider from '../state/AppContextWithStateProvider'\nimport { BrowserRouter as Router} from 'react-router-dom'\nimport HeaderWithNavigation from './headerWithNavigation/HeaderWithNavigation'\nimport LotsOfDots from './LotsOfDots'\n// import Testing from './components/Testing'\n\n\nconst App: React.FC = () => {\n\n    return(\n        <ThemeProvider theme={theme}>\n            <AppContextWithStateProvider>\n                <Router>\n                    <HeaderWithNavigation/>\n                    <LotsOfDots/>\n                </Router>\n            </AppContextWithStateProvider>\n        </ThemeProvider>\n      \n    )\n}\n\nexport default App\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}