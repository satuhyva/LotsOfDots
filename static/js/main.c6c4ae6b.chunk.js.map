{"version":3,"sources":["state/reducer.ts","state/AppContextWithStateProvider.tsx","components/header/headerStyles.ts","components/header/Header.tsx","components/navigation/styles.ts","components/navigation/Navigation.tsx","components/navigation/navigationTargets.tsx","components/headerWithNavigation/headerWithNavigationStyles.ts","components/headerWithNavigation/HeaderWithNavigation.tsx","components/LotsOfDots.tsx","components/App.tsx","index.tsx","state/AppContext.ts","state/actions.ts","utils/theme.ts","types/State.ts","types/ModeOfUse.ts"],"names":["reducer","state","action","type","actionTypes","SET_MODE_OF_USE","modeOfUse","data","votingNumber","CREATE","undefined","votingData","SET_VOTING_NUMBER","SET_VOTING_DATA","AppContextWithStateProvider","children","useReducer","initialState","dispatch","AppContext","Provider","value","useHeaderStyles","makeStyles","theme","createStyles","container","display","flexDirection","justifyContent","alignItems","paddingLeft","paddingBottom","titleText","color","palette","primary","main","paddingTop","descriptionText","fontSize","marginBottom","Header","classes","className","Typography","variant","useStyles","navigationContentsTitle","contrastText","navigationContentsItem","background","backgroundColor","divider","navigationMenu","secondary","borderRadius","icon","paper","width","Navigation","useState","drawerIsOpen","setDrawerIsOpen","navigationTargets","commonProps","style","label","to","getNavigationTargets","handleDrawerStateChanged","newState","event","key","IconButton","onClick","Drawer","open","onClose","role","onKeyDown","List","Fragment","ListItem","Divider","map","target","component","Link","ListItemIcon","ListItemText","useHeaderWithNavigationStyles","outerContainer","marginTop","light","outerContainerNoMode","innerContainer","HeaderWithNavigation","useContext","Home","lazy","CreateVoting","Vote","ViewVoting","LotsOfDots","fallback","path","App","ThemeProvider","ReactDOM","render","document","getElementById","createContext","createMuiTheme","dark","error","success","warning"],"mappings":"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","file":"static/js/main.c6c4ae6b.chunk.js","sourcesContent":["import { Action, actionTypes } from './actions'\nimport { State } from '../types/State'\nimport { modeOfUse } from '../types/ModeOfUse'\n\n\nexport const reducer = (state: State, action: Action): State => {\n\n    switch (action.type) {\n    case actionTypes.SET_MODE_OF_USE:\n        return { \n            modeOfUse: action.data, \n            votingNumber: action.data === modeOfUse.CREATE ? undefined : state.votingNumber,\n            votingData:  action.data === modeOfUse.CREATE ? undefined : state.votingData\n        }\n    case actionTypes.SET_VOTING_NUMBER:\n        return {\n            ...state,\n            votingNumber: action.data,\n            votingData: undefined\n        }\n    case actionTypes.SET_VOTING_DATA:\n        return {\n            ...state,\n            votingData: action.data\n        }\n    default:\n        return state\n    }\n}","import React, { useReducer } from 'react'\nimport { reducer } from './reducer'\nimport { initialState } from '../types/State'\nimport AppContext from './AppContext'\n\n\nconst AppContextWithStateProvider: React.FC = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n    return (\n        <AppContext.Provider value={{ state, dispatch }}>\n            {children}\n        </AppContext.Provider>\n    )\n}\n\nexport default AppContextWithStateProvider\n\n\n\n","import { makeStyles, createStyles } from '@material-ui/core/styles'\nimport { Theme } from '@material-ui/core'\n\n\nexport const useHeaderStyles = makeStyles((theme: Theme) => \n    createStyles({\n        container: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            paddingLeft: 20,\n            paddingBottom: 5,\n        },\n        titleText: {\n            color: theme.palette.primary.main,\n            paddingTop: 5,\n        },\n        descriptionText: {\n            color: theme.palette.primary.main,\n            fontSize: 13,\n            marginBottom: -3,\n        }\n    })\n)\n","import React from 'react'\nimport { useHeaderStyles } from './headerStyles'\nimport Typography from '@material-ui/core/Typography'\n\n\nconst Header: React.FC = () => {\n\n    const classes = useHeaderStyles()\n\n    return(\n        <div className={classes.container}>\n            <Typography variant='h5' className={classes.titleText}>\n                LOTS OF DOTS\n            </Typography>\n            <Typography className={classes.descriptionText}>\n                For quick and simple dot voting.\n            </Typography>\n            {/* <Typography className={classes.descriptionText}>\n                No need for email or phone number data.\n            </Typography> */}\n        </div>\n      \n    )\n}\n\nexport default Header","import { makeStyles, createStyles } from '@material-ui/core/styles'\nimport { Theme } from '@material-ui/core'\n\n\nexport const useStyles = makeStyles((theme: Theme) => \n    createStyles({\n        navigationContentsTitle: {\n            color: theme.palette.primary.contrastText,\n        },\n        navigationContentsItem: {\n            color: theme.palette.primary.contrastText,\n        },\n        background: {\n            backgroundColor: theme.palette.primary.main,\n        },\n        divider: {\n            backgroundColor: theme.palette.primary.contrastText,\n        },\n        navigationMenu: {\n            backgroundColor: theme.palette.secondary.main,\n            borderRadius: 8\n        },\n        icon: {\n            fontSize: 30,\n            color: theme.palette.primary.main,\n        },\n        paper: {\n            background: theme.palette.primary.main, width: '100%'\n        }\n    })\n)\n","import React, { useState } from 'react'\nimport Drawer from '@material-ui/core/Drawer'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider'\nimport { Link } from 'react-router-dom'\nimport { getNavigationTargets } from './navigationTargets'\nimport Typography from '@material-ui/core/Typography'\nimport { useStyles } from './styles'\n\n\n\n\nconst Navigation: React.FC = () => {\n\n    const [drawerIsOpen, setDrawerIsOpen] = useState<boolean>(false)\n    const navigationTargets = getNavigationTargets()\n    const classes = useStyles()\n\n    const handleDrawerStateChanged = (newState: boolean) => (event: React.KeyboardEvent | React.MouseEvent)  => {\n        if (event.type === 'keydown' && ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')) {\n            return\n        }\n        setDrawerIsOpen(newState)\n    }\n\n\n    return(\n        <div className={classes.navigationMenu}>\n            <IconButton onClick={handleDrawerStateChanged(true)}>\n                <MenuIcon className={classes.icon}/>\n            </IconButton>\n            <Drawer\n                open={drawerIsOpen}\n                onClose={handleDrawerStateChanged(false)}\n                classes={{ paper: classes.paper }}\n            >\n                <div role='presentation' onClick={handleDrawerStateChanged(false)} onKeyDown={handleDrawerStateChanged(false)} >\n                    <List>\n                        <React.Fragment key='listHeader'>\n                            <ListItem className={classes.background}>\n                                <Typography variant='h5' className={classes.navigationContentsTitle}>\n                                    LOTS OF DOTS\n                                </Typography>\n                            </ListItem>\n                            <Divider  className={classes.divider}/>\n                        </React.Fragment>\n                        {navigationTargets.map(target => {\n                            return (\n                                <React.Fragment key={target.label}>\n                                    <ListItem component={Link} to={target.to} className={classes.background}>\n                                        <ListItemIcon>\n                                            {target.icon}\n                                        </ListItemIcon>\n                                        <ListItemText primary={target.label} className={classes.navigationContentsItem}/>\n                                    </ListItem>\n                                    <Divider  className={classes.divider}/>\n                                </React.Fragment>\n                            )\n                        })}\n                    </List>\n                </div>\n            </Drawer>\n        </div>\n    )\n}\n\nexport default Navigation","import React from 'react'\nimport HomeIcon from '@material-ui/icons/Home'\nimport CreateIcon from '@material-ui/icons/Create'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\nimport AssessmentIcon from '@material-ui/icons/Assessment'\nimport theme from '../../utils/theme'\n\n\ntype NavigationTarget = {\n    label: string,\n    to: string,\n    icon: React.ReactNode\n}\n\n\nexport const getNavigationTargets = (): NavigationTarget[] => {\n\n    const commonProps = { style: { color: theme.palette.primary.contrastText } }\n\n    return [\n        { label: 'HOME', to: '/home', icon: <HomeIcon fontSize='large' { ...commonProps } /> },\n        { label: 'CREATE NEW VOTING EVENT', to: '/create', icon: <CreateIcon  fontSize='large'  { ...commonProps }/> },\n        { label: 'VOTE IN EXISTING VOTING', to: '/vote', icon: <PersonAddIcon fontSize='large'  { ...commonProps }/> },\n        { label: 'VIEW CURRENT RESULTS', to: '/view', icon: <AssessmentIcon fontSize='large'  { ...commonProps }/> },\n    ]\n}\n\n\n","import { makeStyles, createStyles } from '@material-ui/core/styles'\nimport { Theme } from '@material-ui/core'\n\n\n\nexport const useHeaderWithNavigationStyles = makeStyles((theme: Theme) => \n    createStyles({\n        outerContainer: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'flex-start',\n            marginTop: 10,\n            backgroundColor: theme.palette.secondary.light\n        },\n        outerContainerNoMode: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginTop: 10,\n            backgroundColor: theme.palette.secondary.light\n        },\n        innerContainer: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n            paddingLeft: 10,\n        },\n        divider: {\n            backgroundColor: theme.palette.primary.main,\n            width: '100%'\n        },\n    })\n)\n","import React, { useContext } from 'react'\nimport AppContext from '../../state/AppContext'\nimport Header from '../header/Header'\nimport Navigation from '../navigation/Navigation'\nimport { useHeaderWithNavigationStyles } from './headerWithNavigationStyles'\nimport Divider from '@material-ui/core/Divider'\n\n\nconst HeaderWithNavigation: React.FC = () => {\n\n    const classes = useHeaderWithNavigationStyles()\n    const { state } = useContext(AppContext)\n\n    return(\n        <div className={state.modeOfUse !== undefined ? classes.outerContainer : classes.outerContainerNoMode}>\n            <Divider className={classes.divider}/>\n            <div className={classes.innerContainer}>\n                {state.modeOfUse !== undefined && <Navigation/>}\n                <Header/>\n            </div>\n            <Divider className={classes.divider}/>\n        </div>\n    )\n}\n\nexport default HeaderWithNavigation","import React, { Suspense, lazy } from 'react'\nimport * as BrowserRouter from 'react-router-dom'\n\nconst Home = lazy(() => import('./home/Home'))\nconst CreateVoting = lazy(() => import('./create/CreateVoting'))\nconst Vote = lazy(() => import('./vote/vote-main/Vote'))\nconst ViewVoting = lazy(() => import('./view/ViewVoting'))\n\n\n\nconst LotsOfDots: React.FC = () => {\n\n\n    return(\n        <Suspense fallback={<div>LOADING DATA...</div>}>\n            <BrowserRouter.Switch>\n                <BrowserRouter.Route path='/home'>\n                    <Home/>\n                </BrowserRouter.Route>\n                <BrowserRouter.Route path='/vote'>\n                    <Vote/>\n                </BrowserRouter.Route>\n                <BrowserRouter.Route path='/create'>\n                    <CreateVoting/>\n                </BrowserRouter.Route>\n                <BrowserRouter.Route path='/view'>\n                    <ViewVoting/>\n                </BrowserRouter.Route>\n                <BrowserRouter.Route path='/'>\n                    <Home/>\n                </BrowserRouter.Route>\n            </BrowserRouter.Switch>\n        </Suspense>  \n    )\n}\n\nexport default LotsOfDots\n\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport theme from '../utils/theme'\nimport AppContextWithStateProvider from '../state/AppContextWithStateProvider'\nimport { BrowserRouter as Router} from 'react-router-dom'\nimport HeaderWithNavigation from './headerWithNavigation/HeaderWithNavigation'\nimport LotsOfDots from './LotsOfDots'\n\n\n\nconst App: React.FC = () => {\n\n    return(\n        <ThemeProvider theme={theme}>\n            <AppContextWithStateProvider>\n                <Router>\n                    <HeaderWithNavigation/>\n                    <LotsOfDots/>\n                </Router>\n            </AppContextWithStateProvider>\n        </ThemeProvider>\n      \n    )\n}\n\nexport default App\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n\n","import React from 'react'\nimport { createContext } from 'react'\nimport { initialState } from '../types/State'\nimport { State } from '../types/State'\nimport { Action } from './actions'\n\n\ntype ContextType = {\n    state: State,\n    dispatch: React.Dispatch<Action>\n}\n\n\nconst AppContext = createContext<ContextType>({\n    state: initialState,\n    dispatch: () => null\n})\n\n\nexport default AppContext\n\n","import { modeOfUse } from '../types/ModeOfUse'\nimport { Voting } from '../types/Voting'\n\n\nexport enum actionTypes {\n    'SET_MODE_OF_USE' = 'mode',\n    'SET_VOTING_NUMBER' = 'number',\n    'SET_VOTING_DATA' = 'data'\n}\n\n\nexport type Action = \n| {\n    type: actionTypes.SET_MODE_OF_USE,\n    data: modeOfUse | undefined\n}\n| {\n    type: actionTypes.SET_VOTING_NUMBER,\n    data: string | undefined\n}\n| {\n    type: actionTypes.SET_VOTING_DATA,\n    data: Voting | undefined\n}\n\n","import { createMuiTheme } from '@material-ui/core/styles'\n\n// https://material.io/resources/color/#!/?view.left=0&view.right=0&primary.color=FF9100&secondary.color=F5F5F5\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#616161',\n            light: '#8e8e8e',\n            dark: '#373737',\n            contrastText: '#fafafa'\n        },\n        secondary: {\n            main: '#bdbdbd',\n            light: '#efefef',\n            dark: '#8d8d8d',\n            contrastText: '#212121'\n        },\n        error: {\n            main: '#a30000'\n        }, \n        success: {\n            main: '#4faf11'\n        }, \n        warning: {\n            main: '#ff9100'\n        }, \n    }\n})\n\nexport default theme\n","import { Voting } from './Voting'\nimport { modeOfUse } from './ModeOfUse'\n\n\nexport type State = {\n    modeOfUse: modeOfUse | undefined,\n    votingNumber: string | undefined,\n    votingData: Voting | undefined\n}\n\nexport const initialState: State = {\n    modeOfUse: undefined,\n    votingNumber: undefined,\n    votingData: undefined\n}","export enum modeOfUse {\n    'CREATE' = 'Create new voting',\n    'VOTE' = 'Vote in existing voting',\n    'VIEW' = 'View voting results'\n}"],"sourceRoot":""}